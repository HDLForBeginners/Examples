{
  "schema": "xilinx.com:schema:json_instance:1.0",
  "ip_inst": {
    "xci_name": "axi_vdma_0",
    "component_reference": "xilinx.com:ip:axi_vdma:6.3",
    "ip_revision": "15",
    "gen_directory": "../../../../axi_lite_example.gen/sources_1/ip/axi_vdma_0",
    "parameters": {
      "component_parameters": {
        "Component_Name": [ { "value": "axi_vdma_0", "resolve_type": "user", "usage": "all" } ],
        "C_FAMILY": [ { "value": "zynq", "resolve_type": "user", "usage": "all" } ],
        "c_m_axi_mm2s_data_width": [ { "value": "64", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_m_axis_mm2s_tdata_width": [ { "value": "32", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_m_axi_s2mm_data_width": [ { "value": "64", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_s_axis_s2mm_tdata_width": [ { "value": "32", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_include_s2mm_dre": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_include_s2mm_sf": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_include_mm2s_sf": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_vidprmtr_reads": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_num_fstores": [ { "value": "3", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_use_fsync": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_use_mm2s_fsync": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_use_s2mm_fsync": [ { "value": "2", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_mm2s_sof_enable": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_s2mm_sof_enable": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_include_internal_genlock": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_mm2s_genlock_mode": [ { "value": "3", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_mm2s_genlock_num_masters": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_s2mm_genlock_mode": [ { "value": "2", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_s2mm_genlock_num_masters": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_mm2s_linebuffer_depth": [ { "value": "512", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_mm2s_linebuffer_thresh": [ { "value": "4", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_s2mm_linebuffer_depth": [ { "value": "512", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_s2mm_linebuffer_thresh": [ { "value": "4", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_include_mm2s": [ { "value": "1", "value_src": "user", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_mm2s_max_burst_length": [ { "value": "8", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_include_sg": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_dlytmr_resolution": [ { "value": "125", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_prmry_is_aclk_async": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_dynamic_resolution": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_s2mm_max_burst_length": [ { "value": "8", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_include_s2mm": [ { "value": "1", "value_src": "user", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_all": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_mm2s_rst_out": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_mm2s_buf_empty": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_mm2s_param_updt": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_mm2s_fsync_out": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_tstvec": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_mm2s_frmstr_reg": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_mm2s_delay_counter": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_mm2s_frm_counter": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_s2mm_rst_out": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_s2mm_buf_full": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_s2mm_param_updt": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_s2mm_fsync_out": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_s2mm_sts_reg": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_s2mm_frmstr_reg": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_s2mm_delay_counter": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_enable_s2mm_frm_counter": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_include_mm2s_dre": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_flush_on_fsync": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_s2mm_genlock_repeat_en": [ { "value": "1", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_mm2s_genlock_repeat_en": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_addr_width": [ { "value": "32", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "C_SELECT_XPM": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "c_single_interface": [ { "value": "0", "resolve_type": "user", "format": "long", "enabled": false, "usage": "all" } ],
        "c_enable_vert_flip": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ]
      },
      "model_parameters": {
        "C_S_AXI_LITE_ADDR_WIDTH": [ { "value": "9", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_S_AXI_LITE_DATA_WIDTH": [ { "value": "32", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_DLYTMR_RESOLUTION": [ { "value": "125", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_PRMRY_IS_ACLK_ASYNC": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_VIDPRMTR_READS": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_DYNAMIC_RESOLUTION": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_NUM_FSTORES": [ { "value": "3", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_USE_FSYNC": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_USE_MM2S_FSYNC": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_USE_S2MM_FSYNC": [ { "value": "2", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_FLUSH_ON_FSYNC": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_INCLUDE_INTERNAL_GENLOCK": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_INCLUDE_SG": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_M_AXI_SG_ADDR_WIDTH": [ { "value": "32", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_M_AXI_SG_DATA_WIDTH": [ { "value": "32", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_INCLUDE_MM2S": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_MM2S_GENLOCK_MODE": [ { "value": "3", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_MM2S_GENLOCK_NUM_MASTERS": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_MM2S_GENLOCK_REPEAT_EN": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_MM2S_SOF_ENABLE": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_INCLUDE_MM2S_DRE": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_INCLUDE_MM2S_SF": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_MM2S_LINEBUFFER_DEPTH": [ { "value": "512", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_MM2S_LINEBUFFER_THRESH": [ { "value": "4", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_MM2S_MAX_BURST_LENGTH": [ { "value": "8", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_M_AXI_MM2S_ADDR_WIDTH": [ { "value": "32", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_M_AXI_MM2S_DATA_WIDTH": [ { "value": "64", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_M_AXIS_MM2S_TDATA_WIDTH": [ { "value": "32", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_M_AXIS_MM2S_TUSER_BITS": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_INCLUDE_S2MM": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_S2MM_GENLOCK_MODE": [ { "value": "2", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_S2MM_GENLOCK_NUM_MASTERS": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_S2MM_GENLOCK_REPEAT_EN": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_S2MM_SOF_ENABLE": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_INCLUDE_S2MM_DRE": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_INCLUDE_S2MM_SF": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_S2MM_LINEBUFFER_DEPTH": [ { "value": "512", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_S2MM_LINEBUFFER_THRESH": [ { "value": "4", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_S2MM_MAX_BURST_LENGTH": [ { "value": "8", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_M_AXI_S2MM_ADDR_WIDTH": [ { "value": "32", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_M_AXI_S2MM_DATA_WIDTH": [ { "value": "64", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_S_AXIS_S2MM_TDATA_WIDTH": [ { "value": "32", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_S_AXIS_S2MM_TUSER_BITS": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_ALL": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_0": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_1": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_2": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_3": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_4": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_5": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_6": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_7": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_8": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_9": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_10": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_11": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_12": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_13": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_14": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_DEBUG_INFO_15": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_INSTANCE": [ { "value": "axi_vdma", "resolve_type": "generated", "usage": "all" } ],
        "C_SELECT_XPM": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_VERT_FLIP": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_FAMILY": [ { "value": "zynq", "resolve_type": "generated", "usage": "all" } ]
      },
      "project_parameters": {
        "ARCHITECTURE": [ { "value": "zynq" } ],
        "BASE_BOARD_PART": [ { "value": "digilentinc.com:zybo:part0:2.0" } ],
        "BOARD_CONNECTIONS": [ { "value": "" } ],
        "DEVICE": [ { "value": "xc7z010" } ],
        "PACKAGE": [ { "value": "clg400" } ],
        "PREFHDL": [ { "value": "VERILOG" } ],
        "SILICON_REVISION": [ { "value": "" } ],
        "SIMULATOR_LANGUAGE": [ { "value": "MIXED" } ],
        "SPEEDGRADE": [ { "value": "-1" } ],
        "STATIC_POWER": [ { "value": "" } ],
        "TEMPERATURE_GRADE": [ { "value": "" } ],
        "USE_RDI_CUSTOMIZATION": [ { "value": "TRUE" } ],
        "USE_RDI_GENERATION": [ { "value": "TRUE" } ]
      },
      "runtime_parameters": {
        "IPCONTEXT": [ { "value": "IP_Flow" } ],
        "IPREVISION": [ { "value": "15" } ],
        "MANAGED": [ { "value": "TRUE" } ],
        "OUTPUTDIR": [ { "value": "../../../../axi_lite_example.gen/sources_1/ip/axi_vdma_0" } ],
        "SELECTEDSIMMODEL": [ { "value": "" } ],
        "SHAREDDIR": [ { "value": "." } ],
        "SWVERSION": [ { "value": "2022.2" } ],
        "SYNTHESISFLOW": [ { "value": "OUT_OF_CONTEXT" } ]
      }
    },
    "boundary": {
      "ports": {
        "s_axi_lite_aclk": [ { "direction": "in", "driver_value": "0x0" } ],
        "m_axi_mm2s_aclk": [ { "direction": "in", "driver_value": "0x0" } ],
        "m_axis_mm2s_aclk": [ { "direction": "in", "driver_value": "0x0" } ],
        "m_axi_s2mm_aclk": [ { "direction": "in", "driver_value": "0x0" } ],
        "s_axis_s2mm_aclk": [ { "direction": "in", "driver_value": "0x0" } ],
        "axi_resetn": [ { "direction": "in", "driver_value": "1" } ],
        "s_axi_lite_awvalid": [ { "direction": "in", "driver_value": "0x0" } ],
        "s_axi_lite_awready": [ { "direction": "out" } ],
        "s_axi_lite_awaddr": [ { "direction": "in", "size_left": "8", "size_right": "0", "driver_value": "0" } ],
        "s_axi_lite_wvalid": [ { "direction": "in", "driver_value": "0x0" } ],
        "s_axi_lite_wready": [ { "direction": "out" } ],
        "s_axi_lite_wdata": [ { "direction": "in", "size_left": "31", "size_right": "0", "driver_value": "0" } ],
        "s_axi_lite_bresp": [ { "direction": "out", "size_left": "1", "size_right": "0" } ],
        "s_axi_lite_bvalid": [ { "direction": "out" } ],
        "s_axi_lite_bready": [ { "direction": "in", "driver_value": "0x0" } ],
        "s_axi_lite_arvalid": [ { "direction": "in", "driver_value": "0x0" } ],
        "s_axi_lite_arready": [ { "direction": "out" } ],
        "s_axi_lite_araddr": [ { "direction": "in", "size_left": "8", "size_right": "0", "driver_value": "0" } ],
        "s_axi_lite_rvalid": [ { "direction": "out" } ],
        "s_axi_lite_rready": [ { "direction": "in", "driver_value": "0x0" } ],
        "s_axi_lite_rdata": [ { "direction": "out", "size_left": "31", "size_right": "0" } ],
        "s_axi_lite_rresp": [ { "direction": "out", "size_left": "1", "size_right": "0" } ],
        "mm2s_frame_ptr_out": [ { "direction": "out", "size_left": "5", "size_right": "0" } ],
        "s2mm_frame_ptr_out": [ { "direction": "out", "size_left": "5", "size_right": "0" } ],
        "m_axi_mm2s_araddr": [ { "direction": "out", "size_left": "31", "size_right": "0" } ],
        "m_axi_mm2s_arlen": [ { "direction": "out", "size_left": "7", "size_right": "0" } ],
        "m_axi_mm2s_arsize": [ { "direction": "out", "size_left": "2", "size_right": "0" } ],
        "m_axi_mm2s_arburst": [ { "direction": "out", "size_left": "1", "size_right": "0" } ],
        "m_axi_mm2s_arprot": [ { "direction": "out", "size_left": "2", "size_right": "0" } ],
        "m_axi_mm2s_arcache": [ { "direction": "out", "size_left": "3", "size_right": "0" } ],
        "m_axi_mm2s_arvalid": [ { "direction": "out" } ],
        "m_axi_mm2s_arready": [ { "direction": "in", "driver_value": "0x0" } ],
        "m_axi_mm2s_rdata": [ { "direction": "in", "size_left": "63", "size_right": "0", "driver_value": "0" } ],
        "m_axi_mm2s_rresp": [ { "direction": "in", "size_left": "1", "size_right": "0", "driver_value": "0" } ],
        "m_axi_mm2s_rlast": [ { "direction": "in", "driver_value": "0x0" } ],
        "m_axi_mm2s_rvalid": [ { "direction": "in", "driver_value": "0x0" } ],
        "m_axi_mm2s_rready": [ { "direction": "out" } ],
        "m_axis_mm2s_tdata": [ { "direction": "out", "size_left": "31", "size_right": "0" } ],
        "m_axis_mm2s_tkeep": [ { "direction": "out", "size_left": "3", "size_right": "0" } ],
        "m_axis_mm2s_tuser": [ { "direction": "out", "size_left": "0", "size_right": "0" } ],
        "m_axis_mm2s_tvalid": [ { "direction": "out" } ],
        "m_axis_mm2s_tready": [ { "direction": "in", "driver_value": "0x0" } ],
        "m_axis_mm2s_tlast": [ { "direction": "out" } ],
        "m_axi_s2mm_awaddr": [ { "direction": "out", "size_left": "31", "size_right": "0" } ],
        "m_axi_s2mm_awlen": [ { "direction": "out", "size_left": "7", "size_right": "0" } ],
        "m_axi_s2mm_awsize": [ { "direction": "out", "size_left": "2", "size_right": "0" } ],
        "m_axi_s2mm_awburst": [ { "direction": "out", "size_left": "1", "size_right": "0" } ],
        "m_axi_s2mm_awprot": [ { "direction": "out", "size_left": "2", "size_right": "0" } ],
        "m_axi_s2mm_awcache": [ { "direction": "out", "size_left": "3", "size_right": "0" } ],
        "m_axi_s2mm_awvalid": [ { "direction": "out" } ],
        "m_axi_s2mm_awready": [ { "direction": "in", "driver_value": "0x0" } ],
        "m_axi_s2mm_wdata": [ { "direction": "out", "size_left": "63", "size_right": "0" } ],
        "m_axi_s2mm_wstrb": [ { "direction": "out", "size_left": "7", "size_right": "0" } ],
        "m_axi_s2mm_wlast": [ { "direction": "out" } ],
        "m_axi_s2mm_wvalid": [ { "direction": "out" } ],
        "m_axi_s2mm_wready": [ { "direction": "in", "driver_value": "0x0" } ],
        "m_axi_s2mm_bresp": [ { "direction": "in", "size_left": "1", "size_right": "0", "driver_value": "0" } ],
        "m_axi_s2mm_bvalid": [ { "direction": "in", "driver_value": "0x0" } ],
        "m_axi_s2mm_bready": [ { "direction": "out" } ],
        "s_axis_s2mm_tdata": [ { "direction": "in", "size_left": "31", "size_right": "0", "driver_value": "0" } ],
        "s_axis_s2mm_tkeep": [ { "direction": "in", "size_left": "3", "size_right": "0", "driver_value": "0xF" } ],
        "s_axis_s2mm_tuser": [ { "direction": "in", "size_left": "0", "size_right": "0", "driver_value": "0" } ],
        "s_axis_s2mm_tvalid": [ { "direction": "in", "driver_value": "0x0" } ],
        "s_axis_s2mm_tready": [ { "direction": "out" } ],
        "s_axis_s2mm_tlast": [ { "direction": "in", "driver_value": "0x0" } ],
        "mm2s_introut": [ { "direction": "out" } ],
        "s2mm_introut": [ { "direction": "out" } ]
      },
      "interfaces": {
        "S_AXI_LITE": {
          "vlnv": "xilinx.com:interface:aximm:1.0",
          "abstraction_type": "xilinx.com:interface:aximm_rtl:1.0",
          "mode": "slave",
          "parameters": {
            "DATA_WIDTH": [ { "value": "32", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PROTOCOL": [ { "value": "AXI4LITE", "value_src": "constant", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "ID_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "ADDR_WIDTH": [ { "value": "9", "value_src": "auto", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "AWUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "ARUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "WUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "RUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "BUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "READ_WRITE_MODE": [ { "value": "READ_WRITE", "value_src": "constant", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_BURST": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_LOCK": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_PROT": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_CACHE": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_QOS": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_REGION": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_WSTRB": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_BRESP": [ { "value": "1", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_RRESP": [ { "value": "1", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "SUPPORTS_NARROW_BURST": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_READ_OUTSTANDING": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_WRITE_OUTSTANDING": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "MAX_BURST_LENGTH": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_READ_THREADS": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_WRITE_THREADS": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "RUSER_BITS_PER_BYTE": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "WUSER_BITS_PER_BYTE": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "ARADDR": [ { "physical_name": "s_axi_lite_araddr" } ],
            "ARREADY": [ { "physical_name": "s_axi_lite_arready" } ],
            "ARVALID": [ { "physical_name": "s_axi_lite_arvalid" } ],
            "AWADDR": [ { "physical_name": "s_axi_lite_awaddr" } ],
            "AWREADY": [ { "physical_name": "s_axi_lite_awready" } ],
            "AWVALID": [ { "physical_name": "s_axi_lite_awvalid" } ],
            "BREADY": [ { "physical_name": "s_axi_lite_bready" } ],
            "BRESP": [ { "physical_name": "s_axi_lite_bresp" } ],
            "BVALID": [ { "physical_name": "s_axi_lite_bvalid" } ],
            "RDATA": [ { "physical_name": "s_axi_lite_rdata" } ],
            "RREADY": [ { "physical_name": "s_axi_lite_rready" } ],
            "RRESP": [ { "physical_name": "s_axi_lite_rresp" } ],
            "RVALID": [ { "physical_name": "s_axi_lite_rvalid" } ],
            "WDATA": [ { "physical_name": "s_axi_lite_wdata" } ],
            "WREADY": [ { "physical_name": "s_axi_lite_wready" } ],
            "WVALID": [ { "physical_name": "s_axi_lite_wvalid" } ]
          }
        },
        "M_AXI_MM2S": {
          "vlnv": "xilinx.com:interface:aximm:1.0",
          "abstraction_type": "xilinx.com:interface:aximm_rtl:1.0",
          "mode": "master",
          "address_space_ref": "Data_MM2S",
          "parameters": {
            "SUPPORTS_NARROW_BURST": [ { "value": "0", "value_src": "constant", "format": "long", "usage": "all" } ],
            "NUM_READ_OUTSTANDING": [ { "value": "2", "value_src": "constant", "format": "long", "usage": "all" } ],
            "DATA_WIDTH": [ { "value": "64", "value_src": "auto", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PROTOCOL": [ { "value": "AXI4", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "ID_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "ADDR_WIDTH": [ { "value": "32", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "AWUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "ARUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "WUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "RUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "BUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "READ_WRITE_MODE": [ { "value": "READ_ONLY", "value_src": "auto", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_BURST": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_LOCK": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_PROT": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_CACHE": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_QOS": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_REGION": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_WSTRB": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_BRESP": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_RRESP": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_WRITE_OUTSTANDING": [ { "value": "2", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "MAX_BURST_LENGTH": [ { "value": "256", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_READ_THREADS": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_WRITE_THREADS": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "RUSER_BITS_PER_BYTE": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "WUSER_BITS_PER_BYTE": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "ARADDR": [ { "physical_name": "m_axi_mm2s_araddr" } ],
            "ARBURST": [ { "physical_name": "m_axi_mm2s_arburst" } ],
            "ARCACHE": [ { "physical_name": "m_axi_mm2s_arcache" } ],
            "ARLEN": [ { "physical_name": "m_axi_mm2s_arlen" } ],
            "ARPROT": [ { "physical_name": "m_axi_mm2s_arprot" } ],
            "ARREADY": [ { "physical_name": "m_axi_mm2s_arready" } ],
            "ARSIZE": [ { "physical_name": "m_axi_mm2s_arsize" } ],
            "ARVALID": [ { "physical_name": "m_axi_mm2s_arvalid" } ],
            "RDATA": [ { "physical_name": "m_axi_mm2s_rdata" } ],
            "RLAST": [ { "physical_name": "m_axi_mm2s_rlast" } ],
            "RREADY": [ { "physical_name": "m_axi_mm2s_rready" } ],
            "RRESP": [ { "physical_name": "m_axi_mm2s_rresp" } ],
            "RVALID": [ { "physical_name": "m_axi_mm2s_rvalid" } ]
          }
        },
        "M_AXI_S2MM": {
          "vlnv": "xilinx.com:interface:aximm:1.0",
          "abstraction_type": "xilinx.com:interface:aximm_rtl:1.0",
          "mode": "master",
          "address_space_ref": "Data_S2MM",
          "parameters": {
            "SUPPORTS_NARROW_BURST": [ { "value": "0", "value_src": "constant", "format": "long", "usage": "all" } ],
            "NUM_WRITE_OUTSTANDING": [ { "value": "2", "value_src": "constant", "format": "long", "usage": "all" } ],
            "DATA_WIDTH": [ { "value": "64", "value_src": "auto", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PROTOCOL": [ { "value": "AXI4", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "ID_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "ADDR_WIDTH": [ { "value": "32", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "AWUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "ARUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "WUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "RUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "BUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "READ_WRITE_MODE": [ { "value": "WRITE_ONLY", "value_src": "auto", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_BURST": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_LOCK": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_PROT": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_CACHE": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_QOS": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_REGION": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_WSTRB": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_BRESP": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_RRESP": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_READ_OUTSTANDING": [ { "value": "2", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "MAX_BURST_LENGTH": [ { "value": "256", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_READ_THREADS": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_WRITE_THREADS": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "RUSER_BITS_PER_BYTE": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "WUSER_BITS_PER_BYTE": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "AWADDR": [ { "physical_name": "m_axi_s2mm_awaddr" } ],
            "AWBURST": [ { "physical_name": "m_axi_s2mm_awburst" } ],
            "AWCACHE": [ { "physical_name": "m_axi_s2mm_awcache" } ],
            "AWLEN": [ { "physical_name": "m_axi_s2mm_awlen" } ],
            "AWPROT": [ { "physical_name": "m_axi_s2mm_awprot" } ],
            "AWREADY": [ { "physical_name": "m_axi_s2mm_awready" } ],
            "AWSIZE": [ { "physical_name": "m_axi_s2mm_awsize" } ],
            "AWVALID": [ { "physical_name": "m_axi_s2mm_awvalid" } ],
            "BREADY": [ { "physical_name": "m_axi_s2mm_bready" } ],
            "BRESP": [ { "physical_name": "m_axi_s2mm_bresp" } ],
            "BVALID": [ { "physical_name": "m_axi_s2mm_bvalid" } ],
            "WDATA": [ { "physical_name": "m_axi_s2mm_wdata" } ],
            "WLAST": [ { "physical_name": "m_axi_s2mm_wlast" } ],
            "WREADY": [ { "physical_name": "m_axi_s2mm_wready" } ],
            "WSTRB": [ { "physical_name": "m_axi_s2mm_wstrb" } ],
            "WVALID": [ { "physical_name": "m_axi_s2mm_wvalid" } ]
          }
        },
        "M_AXIS_MM2S": {
          "vlnv": "xilinx.com:interface:axis:1.0",
          "abstraction_type": "xilinx.com:interface:axis_rtl:1.0",
          "mode": "master",
          "parameters": {
            "TDATA_NUM_BYTES": [ { "value": "4", "value_src": "auto", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "TDEST_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "TID_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "TUSER_WIDTH": [ { "value": "1", "value_src": "auto", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_TREADY": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_TSTRB": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_TKEEP": [ { "value": "1", "value_src": "auto", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_TLAST": [ { "value": "1", "value_src": "auto", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "LAYERED_METADATA": [ { "value": "undef", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "TDATA": [ { "physical_name": "m_axis_mm2s_tdata" } ],
            "TKEEP": [ { "physical_name": "m_axis_mm2s_tkeep" } ],
            "TLAST": [ { "physical_name": "m_axis_mm2s_tlast" } ],
            "TREADY": [ { "physical_name": "m_axis_mm2s_tready" } ],
            "TUSER": [ { "physical_name": "m_axis_mm2s_tuser" } ],
            "TVALID": [ { "physical_name": "m_axis_mm2s_tvalid" } ]
          }
        },
        "S_AXIS_S2MM": {
          "vlnv": "xilinx.com:interface:axis:1.0",
          "abstraction_type": "xilinx.com:interface:axis_rtl:1.0",
          "mode": "slave",
          "parameters": {
            "TDATA_NUM_BYTES": [ { "value": "4", "value_src": "auto", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "TDEST_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "TID_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "TUSER_WIDTH": [ { "value": "1", "value_src": "auto", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_TREADY": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_TSTRB": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_TKEEP": [ { "value": "1", "value_src": "auto", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_TLAST": [ { "value": "1", "value_src": "auto", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "LAYERED_METADATA": [ { "value": "undef", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "TDATA": [ { "physical_name": "s_axis_s2mm_tdata" } ],
            "TKEEP": [ { "physical_name": "s_axis_s2mm_tkeep" } ],
            "TLAST": [ { "physical_name": "s_axis_s2mm_tlast" } ],
            "TREADY": [ { "physical_name": "s_axis_s2mm_tready" } ],
            "TUSER": [ { "physical_name": "s_axis_s2mm_tuser" } ],
            "TVALID": [ { "physical_name": "s_axis_s2mm_tvalid" } ]
          }
        },
        "MM2S_INTROUT": {
          "vlnv": "xilinx.com:signal:interrupt:1.0",
          "abstraction_type": "xilinx.com:signal:interrupt_rtl:1.0",
          "mode": "master",
          "parameters": {
            "SENSITIVITY": [ { "value": "LEVEL_HIGH", "value_src": "constant", "usage": "all" } ],
            "PortWidth": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "INTERRUPT": [ { "physical_name": "mm2s_introut" } ]
          }
        },
        "S2MM_INTROUT": {
          "vlnv": "xilinx.com:signal:interrupt:1.0",
          "abstraction_type": "xilinx.com:signal:interrupt_rtl:1.0",
          "mode": "master",
          "parameters": {
            "SENSITIVITY": [ { "value": "LEVEL_HIGH", "value_src": "constant", "usage": "all" } ],
            "PortWidth": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "INTERRUPT": [ { "physical_name": "s2mm_introut" } ]
          }
        },
        "M_AXIS_MM2S_ACLK": {
          "vlnv": "xilinx.com:signal:clock:1.0",
          "abstraction_type": "xilinx.com:signal:clock_rtl:1.0",
          "mode": "slave",
          "parameters": {
            "ASSOCIATED_BUSIF": [ { "value": "M_AXIS_MM2S", "value_src": "constant", "usage": "all" } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "user", "format": "long", "usage": "all" } ],
            "FREQ_TOLERANCE_HZ": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "ASSOCIATED_PORT": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "ASSOCIATED_RESET": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "CLK": [ { "physical_name": "m_axis_mm2s_aclk" } ]
          }
        },
        "S_AXIS_S2MM_ACLK": {
          "vlnv": "xilinx.com:signal:clock:1.0",
          "abstraction_type": "xilinx.com:signal:clock_rtl:1.0",
          "mode": "slave",
          "parameters": {
            "ASSOCIATED_BUSIF": [ { "value": "S_AXIS_S2MM", "value_src": "constant", "usage": "all" } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "user", "format": "long", "usage": "all" } ],
            "FREQ_TOLERANCE_HZ": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "ASSOCIATED_PORT": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "ASSOCIATED_RESET": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "CLK": [ { "physical_name": "s_axis_s2mm_aclk" } ]
          }
        },
        "S_AXI_LITE_ACLK": {
          "vlnv": "xilinx.com:signal:clock:1.0",
          "abstraction_type": "xilinx.com:signal:clock_rtl:1.0",
          "mode": "slave",
          "parameters": {
            "ASSOCIATED_BUSIF": [ { "value": "S_AXI_LITE:M_AXI", "value_src": "constant", "usage": "all" } ],
            "ASSOCIATED_RESET": [ { "value": "axi_resetn", "value_src": "constant", "usage": "all" } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "user", "format": "long", "usage": "all" } ],
            "FREQ_TOLERANCE_HZ": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "ASSOCIATED_PORT": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "CLK": [ { "physical_name": "s_axi_lite_aclk" } ]
          }
        },
        "M_AXI_MM2S_ACLK": {
          "vlnv": "xilinx.com:signal:clock:1.0",
          "abstraction_type": "xilinx.com:signal:clock_rtl:1.0",
          "mode": "slave",
          "parameters": {
            "ASSOCIATED_BUSIF": [ { "value": "M_AXI_MM2S", "value_src": "constant", "usage": "all" } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "user", "format": "long", "usage": "all" } ],
            "FREQ_TOLERANCE_HZ": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "ASSOCIATED_PORT": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "ASSOCIATED_RESET": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "CLK": [ { "physical_name": "m_axi_mm2s_aclk" } ]
          }
        },
        "M_AXI_S2MM_ACLK": {
          "vlnv": "xilinx.com:signal:clock:1.0",
          "abstraction_type": "xilinx.com:signal:clock_rtl:1.0",
          "mode": "slave",
          "parameters": {
            "ASSOCIATED_BUSIF": [ { "value": "M_AXI_S2MM", "value_src": "constant", "usage": "all" } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "user", "format": "long", "usage": "all" } ],
            "FREQ_TOLERANCE_HZ": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "ASSOCIATED_PORT": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "ASSOCIATED_RESET": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "CLK": [ { "physical_name": "m_axi_s2mm_aclk" } ]
          }
        },
        "M_AXI_SG_ACLK": {
          "vlnv": "xilinx.com:signal:clock:1.0",
          "abstraction_type": "xilinx.com:signal:clock_rtl:1.0",
          "mode": "slave",
          "parameters": {
            "ASSOCIATED_BUSIF": [ { "value": "M_AXI_SG", "value_src": "constant", "usage": "all" } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "FREQ_TOLERANCE_HZ": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "ASSOCIATED_PORT": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "ASSOCIATED_RESET": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          }
        },
        "AXI_RESETN": {
          "vlnv": "xilinx.com:signal:reset:1.0",
          "abstraction_type": "xilinx.com:signal:reset_rtl:1.0",
          "mode": "slave",
          "parameters": {
            "POLARITY": [ { "value": "ACTIVE_LOW", "value_src": "constant", "usage": "all" } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "RST": [ { "physical_name": "axi_resetn" } ]
          }
        },
        "MM2S_FRAME_PTR_OUT": {
          "vlnv": "xilinx.com:signal:video_frame_ptr:1.0",
          "abstraction_type": "xilinx.com:signal:video_frame_ptr_rtl:1.0",
          "mode": "master",
          "port_maps": {
            "FRAME_PTR": [ { "physical_name": "mm2s_frame_ptr_out" } ]
          }
        },
        "S2MM_FRAME_PTR_OUT": {
          "vlnv": "xilinx.com:signal:video_frame_ptr:1.0",
          "abstraction_type": "xilinx.com:signal:video_frame_ptr_rtl:1.0",
          "mode": "master",
          "port_maps": {
            "FRAME_PTR": [ { "physical_name": "s2mm_frame_ptr_out" } ]
          }
        }
      },
      "address_spaces": {
        "Data_MM2S": {
          "range": "4294967296",
          "width": "32"
        },
        "Data_S2MM": {
          "range": "4294967296",
          "width": "32"
        }
      },
      "memory_maps": {
        "S_AXI_LITE": {
          "display_name": "S_AXI_LITE_MEM",
          "description": "Memory Map for S_AXI_LITE",
          "address_blocks": {
            "Reg": {
              "base_address": "0",
              "range": "256",
              "display_name": "Reg",
              "description": "Register Block",
              "usage": "register",
              "access": "read-write",
              "registers": {
                "MM2S_VDMACR": {
                  "address_offset": "0x00",
                  "size": 32,
                  "display_name": "MM2S VDMA Control Register",
                  "description": "MM2S VDMA Control Register",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x10042",
                  "fields": {
                    "RS": {
                      "bit_offset": 0,
                      "bit_width": 1,
                      "display_name": "Run/Stop Control",
                      "description": "Run / Stop controls the running and stopping of the VDMA channel. For any VDMA operations to commence, the AXI VDMA engine must be running (VDMACR.RS=1).   0 - Stop. VDMA stops when current (if any) VDMA operations are complete. The halted bit in the VDMA Status Register asserts to 1 when the VDMA engine is halted. This bit gets cleared by the AXI VDMA hardware when an AXI4 Slave response error occurs. The CPU can also choose to clear this bit to stop VDMA operations.   1 - Run. Start VDMA operations. The halted bit in the VDMA Status Register deasserts to 0 when the VDMA engine begins operations. Note: On Run/Stop clear, in-progress stream transfers might terminate early.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "Circular_Park": {
                      "bit_offset": 1,
                      "bit_width": 1,
                      "display_name": "Circular Park",
                      "description": "Indicates frame buffer Circular mode or frame buffer Park mode.\n  0 - Park Mode. Engine will park on frame buffer referenced by PARK_PTR_REG.RdFrmPntrRef.\n  1 - Circular Mode. Engine continuously circles through frame buffers.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "Reset": {
                      "bit_offset": 2,
                      "bit_width": 1,
                      "display_name": "Soft reset",
                      "description": "Soft reset for AXI VDMA MM2S channel. Setting this bit to a 1 causes the AXI VDMA MM2S channel to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed. AXI4-Stream reset output is asserted. Setting VDMACR.Reset = 1 only resets the MM2S channel. After completion of a soft reset all MM2S registers and bits are in the default state. This bit will be zero at the end of the reset cycle.   0 - Normal operation   1 - Reset in progress.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "GenlockEn": {
                      "bit_offset": 3,
                      "bit_width": 1,
                      "display_name": "Genlock or Dynamic Genlock Synchronization",
                      "description": "Enables Genlock or Dynamic Genlock Synchronization.   0 - Genlock or Dynamic Genlock Synchronization disabled. Genlock input is ignored by MM2S.   1 - Genlock or Dynamic Genlock Synchronization enabled. MM2S synchronized to Genlock frame input. Note: This value is valid only when the channel is configured as Genlock Slave or Dynamic Genlock Master or Dynamic Genlock Slave. If configured for Genlock Master mode, this bit is reserved and always reads as zero.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "FrameCntEn": {
                      "bit_offset": 4,
                      "bit_width": 1,
                      "display_name": "Frame Count Enable",
                      "description": "Configures the MM2S channel to allow only a IRQFrameCount number of transfers to occur. After IRQFrameCount frames have been transferred, the MM2S channel halts, DMACR.RS bit is cleared to 0, and DMASR.Halted asserts to 1 when the channel has completely halted.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "GenlockSrc": {
                      "bit_offset": 7,
                      "bit_width": 1,
                      "display_name": "GenlockSrc",
                      "description": "Selects internal or external genlock bus. This bit is set by default when both channels are enabled and are configured as a valid Genlock pair.   0 - External Genlock   1 - Internal Genlock\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "RdPntrNum": {
                      "bit_offset": 8,
                      "bit_width": 4,
                      "display_name": "RdPntrNum",
                      "description": "Indicates the master in control when MM2S channel is configured for Genlock slave/Dynamic Genlock Master/Dynamic Genlock Slave or reserved otherwise.   0000b - Controlling entity is Entity 1   0001b - Controller entity is Entity 2   0010b - Controller entity is Entity 3   and so on.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "FrmCnt_IrqEn": {
                      "bit_offset": 12,
                      "bit_width": 1,
                      "display_name": "Frame Count Complete Interrupt Enable",
                      "description": "Frame Count Complete Interrupt Enable. When set to 1, allows DMASR.FrmCnt_Irq to generate an interrupt out when IRQFrameCount value reaches zero.   0 - Frame Count Interrupt disabled   1 - Frame Count Interrupt enabled\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "DlyCnt_IrqEn": {
                      "bit_offset": 13,
                      "bit_width": 1,
                      "display_name": "Interrupt on Delay Count Interrupt Enable",
                      "description": "Interrupt on Delay Count Interrupt Enable. When set to 1, allows DMASR.DlyCnt_Irq to generate an interrupt out.   0 - Delay Count Interrupt disabled   1 - Delay Count Interrupt enabled.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "Err_IrqEn": {
                      "bit_offset": 14,
                      "bit_width": 1,
                      "display_name": "Interrupt on Error Interrupt Enable",
                      "description": "Interrupt on Error Interrupt Enable. When set to 1, allows VDMASR.Err_Irq to generate an interrupt out.   0 - Error Interrupt disabled   1 - Error Interrupt enabled.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "Repeat_En": {
                      "bit_offset": 15,
                      "bit_width": 1,
                      "display_name": "Repeat Enable",
                      "description": "Enables repeat or advance frame when AXI VDMA encounters a frame error. This is applicable when AXI VDMA is configured in Genlock Master or Dynamic Genlock Master.   0 - Advance to next frame on frame errors   1 - Repeat previous frame on frame errors\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "IRQFrameCount": {
                      "bit_offset": 16,
                      "bit_width": 8,
                      "display_name": "IRQFrameCount",
                      "description": "This value is used for setting the interrupt threshold. When a frame transfer starts, an internal counter counts down from the Interrupt Frame Count setting.\nWhen the count reaches zero, an interrupt out is generated by the MM2S channel. When a value different than the current IRQFrameCount is written to this field, the internal frame counter is reset to the new value.\nThe minimum setting for the count is 0x01. A write of 0x00 to this register sets the count to 0x01.\nWhen DMACR.FrameCntEn = 1, this value determines the number of frame buffers to process.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "IRQDelayCount": {
                      "bit_offset": 24,
                      "bit_width": 8,
                      "display_name": "IRQDelayCount",
                      "description": "This value is used for setting the interrupt delay count value. The delay count interrupt is a mechanism for causing the MM2S channel to generate an interrupt after the delay period has expired. The timer begins counting either upon receipt of frame sync (external fsync mode) or completion of vsize lines (free run mode). It resets with a subsequent start-of-packet ( m_axis_mm2s_tvalid ) assertion. When a value different than the current IRQDelayCount is written to this field, the internal delay counter is reset to the new value.\nSetting this value to zero disables the delay counter interrupt.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_VDMASR": {
                  "address_offset": "0x04",
                  "size": 32,
                  "display_name": "MM2S VDMA Status Register",
                  "description": "MM2S VDMA Status Register",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x10001",
                  "fields": {
                    "Halted": {
                      "bit_offset": 0,
                      "bit_width": 1,
                      "display_name": "VDMA Channel Halted",
                      "description": "VDMA Channel Halted.\nIndicates the run/stop state of the VDMA channel.\n  0 - VDMA channel running\n  1 - VDMA channel halted. This bit gets set when VDMACR.RS = 0. There can be a lag of time between when VDMACR.RS = 0 and when VDMASR.Halted = 1.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "VDMAIntErr": {
                      "bit_offset": 4,
                      "bit_width": 1,
                      "display_name": "VDMA Internal Error",
                      "description": "VDMA Internal Error.   0 - No VDMA Internal Errors.   1 - VDMA Internal Error detected. This error occurs during one of the following conditions.   (a) HSIZE or VSIZE register were written zeros or   (b) Internal error received from helper core axi_datamover or   (c) Transferred frame size is lesser than programmed vsize (SOFEarlyErr). In case (a) and/or (b) channel stops (that is, the VDMACR.RS bit is set to 0 and remains cleared).\nTo restart the channel, soft or hard reset is required.\nIn case (c), channel does not stop or halt.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "VDMASlvErr": {
                      "bit_offset": 5,
                      "bit_width": 1,
                      "display_name": "VDMA Slave Error",
                      "description": "VDMA Slave Error.   0 - No VDMA Slave Errors.   1 - VDMA Slave Error detected. VDMA Engine halts. This error occurs if the slave read from the Memory Map interface issues a Slave Error.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "VDMADecErr": {
                      "bit_offset": 6,
                      "bit_width": 1,
                      "display_name": "VDMA Decode Error",
                      "description": "VDMA Decode Error. This error occurs if the address request is to an invalid address.   0 = No VDMA Decode Errors.   1 = VDMA Decode Error detected. VDMA channel halts.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "SOFEarlyErr": {
                      "bit_offset": 7,
                      "bit_width": 1,
                      "display_name": "Start of Frame Early Error",
                      "description": "Start of Frame Early Error   0 - No start-of-frame Error   1 - Start of Frame Early Error detected This error occurs if mm2s_fsync is received before the completion of the frame on the streaming interface.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "FrmCnt_Irq": {
                      "bit_offset": 12,
                      "bit_width": 1,
                      "display_name": "Frame Count Interrupt",
                      "description": "Frame Count Interrupt.   0 - No Frame Count Interrupt.   1 - Frame Count Interrupt detected. If enabled (DMACR.FrmCnt_IrqEn = 1) and if the interrupt threshold has been met, an interrupt out is generated.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "DlyCnt_Irq": {
                      "bit_offset": 13,
                      "bit_width": 1,
                      "display_name": "Interrupt on Delay",
                      "description": "Interrupt on Delay.   0 - No Delay Interrupt.   1 - Delay Interrupt detected. If enabled (DMACR.DlyCnt_IrqEn = 1), an interrupt out is generated when the delay count reaches its programmed value.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "Err_Irq": {
                      "bit_offset": 14,
                      "bit_width": 1,
                      "display_name": "Interrupt on Error",
                      "description": "Interrupt on Error.   0 - No error Interrupt.   1 - Error interrupt detected. If enabled (VDMACR.Err_IrqEn = 1), an interrupt out is generated when an error is detected.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "IRQFrameCntSts": {
                      "bit_offset": 16,
                      "bit_width": 8,
                      "display_name": "Interrupt Frame Count Status",
                      "description": "Interrupt Frame Count Status. Indicates current interrupt frame count value.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "IRQDelayCntSts": {
                      "bit_offset": 24,
                      "bit_width": 8,
                      "display_name": "Interrupt Delay Count Status",
                      "description": "Interrupt Delay Count Status. Indicates current interrupt delay time value.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    }
                  }
                },
                "MM2S_REG_INDEX": {
                  "address_offset": "0x14",
                  "size": 32,
                  "display_name": "MM2S Register Index",
                  "description": "MM2S Register Index",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "MM2S_Reg_Index": {
                      "bit_offset": 0,
                      "bit_width": 1,
                      "display_name": "MM2S Register Index",
                      "description": "When Frame Buffers is greater than 16\n  0 - Any write or read access between 0x5C to 0x98 accesses the Start Address 1 to 16.\n  1 - Any write or read access between 0x5C to 0x98 accesses the Start Address 17 to 32.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "PARK_PTR_REG": {
                  "address_offset": "0x28",
                  "size": 32,
                  "display_name": "Park Pointer Register",
                  "description": "Park Pointer Register",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "RdFrmPtrRef": {
                      "bit_offset": 0,
                      "bit_width": 5,
                      "display_name": "Read Frame Pointer Reference",
                      "description": "Read Frame Pointer Reference. When Parked (MM2S_VDMACR.Circular_Park = 0) the MM2S channel parks on the buffer referenced by this frame number.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "WrFrmPtrRef": {
                      "bit_offset": 8,
                      "bit_width": 5,
                      "display_name": "Write Frame Pointer Reference",
                      "description": "Write Frame Pointer Reference. When Parked (S2MM_VDMACR.Circular_Park = 0) the S2MM channel parks on the buffer referenced by this frame number.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "RdFrmStore": {
                      "bit_offset": 16,
                      "bit_width": 5,
                      "display_name": "Read Frame Store number",
                      "description": "Read Frame Store number. Indicates the frame number being operated on by the MM2S channel. During VDMA operations this value continually updates as each frame is processed. During error conditions, the value is updated with the frame number being operated on when the error occurred. It will again start tracking the current frame number when all errors are cleared. \n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "WrFrmStore": {
                      "bit_offset": 24,
                      "bit_width": 5,
                      "display_name": "Write Frame Store number",
                      "description": "Write Frame Store number. Indicates current frame number being operated on by the S2MM channel. During VDMA operations this value continually updates as each frame is processed. During error conditions, the value is updated with the frame number being operated on when the error occurred. It will again start tracking the current frame number when all errors are cleared.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "VDMA_VERSION": {
                  "address_offset": "0x2C",
                  "size": 32,
                  "display_name": "AXI VDMA Version Register",
                  "description": "AXI VDMA Version Register",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x62000000",
                  "fields": {
                    "Xilinx_Internal": {
                      "bit_offset": 0,
                      "bit_width": 16,
                      "display_name": "Xilinx Internal",
                      "description": "Reserved for Internal Use Only. Integer value from 0 to 9,999.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "Minor_Version": {
                      "bit_offset": 20,
                      "bit_width": 8,
                      "display_name": "Minor Version",
                      "description": "Two separate 4-bit hexadecimal values. 00 = 00h, 01 = 01h, and so on.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "Major_Version": {
                      "bit_offset": 28,
                      "bit_width": 4,
                      "display_name": "Major Version",
                      "description": "Single 4-bit hexadecimal value. v1 = 1h, v2=2h, v3=3h, and so on.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    }
                  }
                },
                "S2MM_VDMACR": {
                  "address_offset": "0x30",
                  "size": 32,
                  "display_name": "S2MM VDMA Control Register",
                  "description": "S2MM VDMA Control Register",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x10042",
                  "fields": {
                    "RS": {
                      "bit_offset": 0,
                      "bit_width": 1,
                      "display_name": "Run/Stop Control",
                      "description": "Run / Stop controls the running and stopping of the VDMA channel. For any VDMA operations to commence, the AXI VDMA engine must be running (VDMACR.RS=1).   0 - Stop. VDMA stops when current (if any) VDMA operations are complete. The halted bit in the VDMA Status Register asserts to 1 when the VDMA engine is halted. This bit gets cleared by the AXI VDMA hardware when an AXI4 Slave response error occurs. The CPU can also choose to clear this bit to stop VDMA operations.   1 - Run. Start VDMA operations. The halted bit in the VDMA Status Register deasserts to 0 when the VDMA engine begins operations. Note: On Run/Stop clear, in-progress stream transfers might terminate early.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "Circular_Park": {
                      "bit_offset": 1,
                      "bit_width": 1,
                      "display_name": "Circular Park",
                      "description": "Indicates frame buffer Circular mode or frame buffer Park mode.\n  0 - Park Mode. Engine will park on frame buffer referenced by PARK_PTR_REG.RdFrmPntrRef.\n  1 - Circular Mode. Engine continuously circles through frame buffers.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "Reset": {
                      "bit_offset": 2,
                      "bit_width": 1,
                      "display_name": "Soft reset",
                      "description": "Soft reset for AXI VDMA S2MM channel. Setting this bit to a 1 causes the AXI VDMA S2MM channel to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed. AXI4-Stream reset output is asserted. Setting VDMACR.Reset = 1 only resets the S2MM channel. After completion of a soft reset all S2MM registers and bits are in the default state. This bit will be zero at the end of the reset cycle.   0 - Normal operation   1 - Reset in progress.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "GenlockEn": {
                      "bit_offset": 3,
                      "bit_width": 1,
                      "display_name": "Genlock or Dynamic Genlock Synchronization",
                      "description": "Enables Genlock or Dynamic Genlock Synchronization.   0 - Genlock or Dynamic Genlock Synchronization disabled. Genlock input is ignored by S2MM.   1 - Genlock or Dynamic Genlock Synchronization enabled. S2MM synchronized to Genlock frame input. Note: This value is valid only when the channel is configured as Genlock Slave or Dynamic Genlock Master or Dynamic Genlock Slave. If configured for Genlock Master mode, this bit is reserved and always reads as zero.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "FrameCntEn": {
                      "bit_offset": 4,
                      "bit_width": 1,
                      "display_name": "Frame Count Enable",
                      "description": "Configures the S2MM channel to allow only a IRQFrameCount number of transfers to occur. After IRQFrameCount frames have been transferred, the S2MM channel halts, DMACR.RS bit is cleared to 0, and DMASR.Halted asserts to 1 when the channel has completely halted.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "GenlockSrc": {
                      "bit_offset": 7,
                      "bit_width": 1,
                      "display_name": "GenlockSrc",
                      "description": "Selects internal or external genlock bus. This bit is set by default when both channels are enabled and are configured as a valid Genlock pair.   0 - External Genlock   1 - Internal Genlock\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "RdPntrNum": {
                      "bit_offset": 8,
                      "bit_width": 4,
                      "display_name": "RdPntrNum",
                      "description": "Indicates the master in control when S2MM channel is configured for Genlock slave/Dynamic Genlock Master/Dynamic Genlock Slave or reserved otherwise.   0000b - Controlling entity is Entity 1   0001b - Controller entity is Entity 2   0010b - Controller entity is Entity 3   and so on.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "FrmCnt_IrqEn": {
                      "bit_offset": 12,
                      "bit_width": 1,
                      "display_name": "Frame Count Complete Interrupt Enable",
                      "description": "Frame Count Complete Interrupt Enable. When set to 1, allows DMASR.FrmCnt_Irq to generate an interrupt out when IRQFrameCount value reaches zero.   0 - Frame Count Interrupt disabled   1 - Frame Count Interrupt enabled\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "DlyCnt_IrqEn": {
                      "bit_offset": 13,
                      "bit_width": 1,
                      "display_name": "Interrupt on Delay Count Interrupt Enable",
                      "description": "Interrupt on Delay Count Interrupt Enable. When set to 1, allows DMASR.DlyCnt_Irq to generate an interrupt out.   0 - Delay Count Interrupt disabled   1 - Delay Count Interrupt enabled.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "Err_IrqEn": {
                      "bit_offset": 14,
                      "bit_width": 1,
                      "display_name": "Interrupt on Error Interrupt Enable",
                      "description": "Interrupt on Error Interrupt Enable. When set to 1, allows VDMASR.Err_Irq to generate an interrupt out.   0 - Error Interrupt disabled   1 - Error Interrupt enabled.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "Repeat_En": {
                      "bit_offset": 15,
                      "bit_width": 1,
                      "display_name": "Repeat Enable",
                      "description": "Enables repeat or advance frame when AXI VDMA encounters a frame error. This is applicable when AXI VDMA is configured in Genlock Master or Dynamic Genlock Master.   0 - Advance to next frame on frame errors   1 - Repeat previous frame on frame errors\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "IRQFrameCount": {
                      "bit_offset": 16,
                      "bit_width": 8,
                      "display_name": "IRQFrameCount",
                      "description": "This value is used for setting the interrupt threshold. When a frame transfer starts, an internal counter counts down from the Interrupt Frame Count setting.\nWhen the count reaches zero, an interrupt out is generated by the S2MM channel. When a value different than the current IRQFrameCount is written to this field, the internal frame counter is reset to the new value.\nThe minimum setting for the count is 0x01. A write of 0x00 to this register sets the count to 0x01.\nWhen DMACR.FrameCntEn = 1, this value determines the number of frame buffers to process.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "IRQDelayCount": {
                      "bit_offset": 24,
                      "bit_width": 8,
                      "display_name": "IRQDelayCount",
                      "description": "This value is used for setting the interrupt delay count value. The delay count interrupt is a mechanism for causing the S2MM channel to generate an interrupt after the delay period has expired. The timer begins counting either upon receipt of frame sync (external fsync mode) or completion of vsize lines (free run mode). It resets with a subsequent start-of-packet ( s_axis_s2mm_tvalid ) assertion. When a value different than the current IRQDelayCount is written to this field, the internal delay counter is reset to the new value.\nSetting this value to zero disables the delay counter interrupt.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_VDMASR": {
                  "address_offset": "0x34",
                  "size": 32,
                  "display_name": "S2MM VDMA Status Register",
                  "description": "S2MM VDMA Status Register",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x10001",
                  "fields": {
                    "Halted": {
                      "bit_offset": 0,
                      "bit_width": 1,
                      "display_name": "VDMA Channel Halted",
                      "description": "VDMA Channel Halted.\nIndicates the run/stop state of the VDMA channel.\n  0 - VDMA channel running\n  1 - VDMA channel halted. This bit gets set when VDMACR.RS = 0. There can be a lag of time between when VDMACR.RS = 0 and when VDMASR.Halted = 1.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "VDMAIntErr": {
                      "bit_offset": 4,
                      "bit_width": 1,
                      "display_name": "VDMA Internal Error",
                      "description": "VDMA Internal Error.   0 - No VDMA Internal Errors.   1 - VDMA Internal Error detected. This error occurs during one of the following conditions.   (a) HSIZE or VSIZE register were written zeros or   (b) Internal error received from helper core axi_datamover or   (c) Transferred frame size is lesser than programmed vsize (SOFEarlyErr). In case (a) and/or (b) channel stops (that is, the VDMACR.RS bit is set to 0 and remains cleared).\nTo restart the channel, soft or hard reset is required.\nIn case (c), channel does not stop or halt.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "VDMASlvErr": {
                      "bit_offset": 5,
                      "bit_width": 1,
                      "display_name": "VDMA Slave Error",
                      "description": "VDMA Slave Error.   0 - No VDMA Slave Errors.   1 - VDMA Slave Error detected. VDMA Engine halts. This error occurs if the slave read from the Memory Map interface issues a Slave Error.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "VDMADecErr": {
                      "bit_offset": 6,
                      "bit_width": 1,
                      "display_name": "VDMA Decode Error",
                      "description": "VDMA Decode Error. This error occurs if the address request is to an invalid address.   0 = No VDMA Decode Errors.   1 = VDMA Decode Error detected. VDMA channel halts.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "SOFEarlyErr": {
                      "bit_offset": 7,
                      "bit_width": 1,
                      "display_name": "Start of Frame Early Error",
                      "description": "Start of Frame Early Error   0 - No start-of-frame Error   1 - Start of Frame Early Error detected. VDMA does not halt. This error occurs if incoming frame size is lesser than programmed vsize value. Write 1 to Clear in flush on fsync mode and Read Only otherwise.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "EOLEarlyErr": {
                      "bit_offset": 8,
                      "bit_width": 1,
                      "display_name": "End of Line Early Error",
                      "description": "End of Line Early Error.   0 - No End of Line Early Error   1 - End of Line Early Error detected. VDMA does not halt. This error occurs if the incoming line size is lesser than the programmed hsize value. Write 1 to clear.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "SOFLateErr": {
                      "bit_offset": 11,
                      "bit_width": 1,
                      "display_name": "Start of Frame Late Error",
                      "description": "Start of Frame Late Error.   0 - No start-of-frame Late Error   1 - Start of Frame Late Error detected. VDMA does not halt. This error occurs if the incoming frame size is greater than the programmed vsize value. Write 1 to Clear in flush on fsync mode.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "FrmCnt_Irq": {
                      "bit_offset": 12,
                      "bit_width": 1,
                      "display_name": "Frame Count Interrupt",
                      "description": "Frame Count Interrupt.   0 - No Frame Count Interrupt.   1 - Frame Count Interrupt detected. If enabled (DMACR.FrmCnt_IrqEn = 1) and if the interrupt threshold has been met, an interrupt out is generated.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "DlyCnt_Irq": {
                      "bit_offset": 13,
                      "bit_width": 1,
                      "display_name": "Interrupt on Delay",
                      "description": "Interrupt on Delay.   0 - No Delay Interrupt.   1 - Delay Interrupt detected. If enabled (DMACR.DlyCnt_IrqEn = 1), an interrupt out is generated when the delay count reaches its programmed value.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "Err_Irq": {
                      "bit_offset": 14,
                      "bit_width": 1,
                      "display_name": "Interrupt on Error",
                      "description": "Interrupt on Error.   0 - No error Interrupt.   1 - Error interrupt detected. If enabled (VDMACR.Err_IrqEn = 1), an interrupt out is generated when an error is detected.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "EOLLateErr": {
                      "bit_offset": 15,
                      "bit_width": 1,
                      "display_name": "End of Line Late Error",
                      "description": "End of Line Late Error.   0 - No End of Line Late Error   1 - End of Line Late Error detected. VDMA does not halt. This error occurs if the incoming line size is greater than the programmed hsize value. Write 1 to clear\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "IRQFrameCntSts": {
                      "bit_offset": 16,
                      "bit_width": 8,
                      "display_name": "Interrupt Frame Count Status",
                      "description": "Interrupt Frame Count Status. Indicates current interrupt frame count value.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "IRQDelayCntSts": {
                      "bit_offset": 24,
                      "bit_width": 8,
                      "display_name": "Interrupt Delay Count Status",
                      "description": "Interrupt Delay Count Status. Indicates current interrupt delay time value.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    }
                  }
                },
                "S2MM_VDMA_IRQ_MASK": {
                  "address_offset": "0x3C",
                  "size": 32,
                  "display_name": "S2MM Error Interrupt Mask Register",
                  "description": "S2MM Error Interrupt Mask Register",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "IRQMaskSOFEarlyErr": {
                      "bit_offset": 0,
                      "bit_width": 1,
                      "display_name": "IRQMaskSOFEarlyErr",
                      "description": "1 - Masks interrupt due to SOFEarlyErr.\n0 - Does not mask interrupt due to SOFEarlyErr.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "IRQMaskEOLEarlyErr": {
                      "bit_offset": 1,
                      "bit_width": 1,
                      "display_name": "IRQMaskEOLEarlyErr",
                      "description": "1 - Masks interrupt due to EOLEarlyErr.\n0 - Does not mask interrupt due to EOLEarlyErr.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "IRQMaskSOFLateErr": {
                      "bit_offset": 2,
                      "bit_width": 1,
                      "display_name": "IRQMaskSOFLateErr",
                      "description": "1 - Masks interrupt due to SOFLateErr.\n0 - Does not mask interrupt due to SOFLateErr.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "IRQMaskEOLLateErr": {
                      "bit_offset": 3,
                      "bit_width": 1,
                      "display_name": "IRQMaskEOLLateErr",
                      "description": "1 = Masks interrupt due to EOLLateErr.\n0 = Does not mask interrupt due to EOLLateErr.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_REG_INDEX": {
                  "address_offset": "0x44",
                  "size": 32,
                  "display_name": "S2MM Register Index",
                  "description": "S2MM Register Index",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "S2MM_Reg_Index": {
                      "bit_offset": 0,
                      "bit_width": 1,
                      "display_name": "S2MM Register Index",
                      "description": "When Frame Buffers is greater than 16\n  0 - Any write or read access between 0xAC to 0xE8 accesses the Start Address 1 to 16.\n  1 - Any write or read access between 0xAC to 0xE8 accesses the Start Address 17 to 32.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_VSIZE": {
                  "address_offset": "0x50",
                  "size": 32,
                  "display_name": "MM2S Vertical Size",
                  "description": "MM2S Vertical Size",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Vertical_Size": {
                      "bit_offset": 0,
                      "bit_width": 13,
                      "display_name": "Vertical Size",
                      "description": "Indicates the vertical size in lines of the video data to transfer.\nNote: Writing a value of zero in this field causes a VDMAIntErr to be flagged in the MM2S_VDMASR register on the next frame boundary.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_HSIZE": {
                  "address_offset": "0x54",
                  "size": 32,
                  "display_name": "MM2S Horizontal Size",
                  "description": "MM2S Horizontal Size",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Horizontal_Size": {
                      "bit_offset": 0,
                      "bit_width": 16,
                      "display_name": "Horizontal Size",
                      "description": "Indicates the horizontal size in bytes of the video data to transfer.\nNote: A value of zero in this field when MM2S_VSIZE is written causes a VDMAIntErr to be flagged in the MM2S_VDMASR register on the next frame boundary.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_FRMDLY_STRIDE": {
                  "address_offset": "0x58",
                  "size": 32,
                  "display_name": "MM2S Frame Delay and Stride",
                  "description": "MM2S Frame Delay and Stride",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Stride": {
                      "bit_offset": 0,
                      "bit_width": 16,
                      "display_name": "Stride",
                      "description": "Indicates the number of address bytes between the first pixels of each video line.\nNote: A stride value less than MM2S_HSIZE causes data to be corrupted.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "Frame_Delay": {
                      "bit_offset": 24,
                      "bit_width": 5,
                      "display_name": "Frame Delay",
                      "description": "Indicates the minimum number of frame buffers the Genlock slave is to be behind the locked master. This field is only used if the channel is enabled for Genlock Slave operations. This field has no meaning in other Genlock modes.\nNote: Frame Delay must be less than or equal to Frame Buffers or an undefined results occur.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA1": {
                  "address_offset": "0x5C",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 1",
                  "description": "MM2S Start Address Register 1",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address1": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address1",
                      "description": "Indicates the Start Address for video buffer 1\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA2": {
                  "address_offset": "0x60",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 2",
                  "description": "MM2S Start Address Register 2",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address2": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address2",
                      "description": "Indicates the Start Address for video buffer 2\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA3": {
                  "address_offset": "0x64",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 3",
                  "description": "MM2S Start Address Register 3",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address3": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address3",
                      "description": "Indicates the Start Address for video buffer 3\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA4": {
                  "address_offset": "0x68",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 4",
                  "description": "MM2S Start Address Register 4",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address4": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address4",
                      "description": "Indicates the Start Address for video buffer 4\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA5": {
                  "address_offset": "0x6C",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 5",
                  "description": "MM2S Start Address Register 5",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address5": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address5",
                      "description": "Indicates the Start Address for video buffer 5\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA6": {
                  "address_offset": "0x70",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 6",
                  "description": "MM2S Start Address Register 6",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address6": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address6",
                      "description": "Indicates the Start Address for video buffer 6\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA7": {
                  "address_offset": "0x74",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 7",
                  "description": "MM2S Start Address Register 7",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address7": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address7",
                      "description": "Indicates the Start Address for video buffer 7\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA8": {
                  "address_offset": "0x78",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 8",
                  "description": "MM2S Start Address Register 8",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address8": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address8",
                      "description": "Indicates the Start Address for video buffer 8\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA9": {
                  "address_offset": "0x7C",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 9",
                  "description": "MM2S Start Address Register 9",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address9": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address9",
                      "description": "Indicates the Start Address for video buffer 9\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA10": {
                  "address_offset": "0x80",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 10",
                  "description": "MM2S Start Address Register 10",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address10": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address10",
                      "description": "Indicates the Start Address for video buffer 10\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA11": {
                  "address_offset": "0x84",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 11",
                  "description": "MM2S Start Address Register 11",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address11": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address11",
                      "description": "Indicates the Start Address for video buffer 11\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA12": {
                  "address_offset": "0x88",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 12",
                  "description": "MM2S Start Address Register 12",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address12": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address12",
                      "description": "Indicates the Start Address for video buffer 12\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA13": {
                  "address_offset": "0x8C",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 13",
                  "description": "MM2S Start Address Register 13",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address13": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address13",
                      "description": "Indicates the Start Address for video buffer 13\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA14": {
                  "address_offset": "0x90",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 14",
                  "description": "MM2S Start Address Register 14",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address14": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address14",
                      "description": "Indicates the Start Address for video buffer 14\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA15": {
                  "address_offset": "0x94",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 15",
                  "description": "MM2S Start Address Register 15",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address15": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address15",
                      "description": "Indicates the Start Address for video buffer 15\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "MM2S_SA16": {
                  "address_offset": "0x98",
                  "size": 32,
                  "display_name": "MM2S Start Address Register 16",
                  "description": "MM2S Start Address Register 16",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address16": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address16",
                      "description": "Indicates the Start Address for video buffer 16\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_VSIZE": {
                  "address_offset": "0xA0",
                  "size": 32,
                  "display_name": "S2MM Vertical Size",
                  "description": "S2MM Vertical Size",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Vertical_Size": {
                      "bit_offset": 0,
                      "bit_width": 13,
                      "display_name": "Vertical Size",
                      "description": "Indicates the vertical size in lines of the video data to transfer.\nNote: Writing a value of zero in this field causes a VDMAIntErr to be flagged in the S2MM_VDMASR register on the next frame boundary.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_HSIZE": {
                  "address_offset": "0xA4",
                  "size": 32,
                  "display_name": "S2MM Horizontal Size",
                  "description": "S2MM Horizontal Size",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Horizontal_Size": {
                      "bit_offset": 0,
                      "bit_width": 16,
                      "display_name": "Horizontal Size",
                      "description": "Indicates the horizontal size in bytes of the video data to transfer.\nNote: A value of zero in this field when S2MM_VSIZE is written causes a VDMAIntErr to be flagged in the S2MM_VDMASR register on the next frame boundary.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_FRMDLY_STRIDE": {
                  "address_offset": "0xA8",
                  "size": 32,
                  "display_name": "S2MM Frame Delay and Stride",
                  "description": "S2MM Frame Delay and Stride",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Stride": {
                      "bit_offset": 0,
                      "bit_width": 16,
                      "display_name": "Stride",
                      "description": "Indicates the number of address bytes between the first pixels of each video line.\nNote: A stride value less than S2MM_HSIZE causes data to be corrupted.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "Frame_Delay": {
                      "bit_offset": 24,
                      "bit_width": 5,
                      "display_name": "Frame Delay",
                      "description": "Indicates the minimum number of frame buffers the Genlock slave is to be behind the locked master. This field is only used if the channel is enabled for Genlock Slave operations. This field has no meaning in other Genlock modes.\nNote: Frame Delay must be less than or equal to Frame Buffers or an undefined results occur.\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA1": {
                  "address_offset": "0xAC",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 1",
                  "description": "S2MM Start Address Register 1",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address1": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address1",
                      "description": "Indicates the Start Address for video buffer 1\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA2": {
                  "address_offset": "0xB0",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 2",
                  "description": "S2MM Start Address Register 2",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address2": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address2",
                      "description": "Indicates the Start Address for video buffer 2\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA3": {
                  "address_offset": "0xB4",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 3",
                  "description": "S2MM Start Address Register 3",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address3": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address3",
                      "description": "Indicates the Start Address for video buffer 3\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA4": {
                  "address_offset": "0xB8",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 4",
                  "description": "S2MM Start Address Register 4",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address4": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address4",
                      "description": "Indicates the Start Address for video buffer 4\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA5": {
                  "address_offset": "0xBC",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 5",
                  "description": "S2MM Start Address Register 5",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address5": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address5",
                      "description": "Indicates the Start Address for video buffer 5\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA6": {
                  "address_offset": "0xC0",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 6",
                  "description": "S2MM Start Address Register 6",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address6": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address6",
                      "description": "Indicates the Start Address for video buffer 6\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA7": {
                  "address_offset": "0xC4",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 7",
                  "description": "S2MM Start Address Register 7",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address7": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address7",
                      "description": "Indicates the Start Address for video buffer 7\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA8": {
                  "address_offset": "0xC8",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 8",
                  "description": "S2MM Start Address Register 8",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address8": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address8",
                      "description": "Indicates the Start Address for video buffer 8\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA9": {
                  "address_offset": "0xCC",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 9",
                  "description": "S2MM Start Address Register 9",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address9": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address9",
                      "description": "Indicates the Start Address for video buffer 9\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA10": {
                  "address_offset": "0xD0",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 10",
                  "description": "S2MM Start Address Register 10",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address10": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address10",
                      "description": "Indicates the Start Address for video buffer 10\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA11": {
                  "address_offset": "0xD4",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 11",
                  "description": "S2MM Start Address Register 11",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address11": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address11",
                      "description": "Indicates the Start Address for video buffer 11\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA12": {
                  "address_offset": "0xD8",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 12",
                  "description": "S2MM Start Address Register 12",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address12": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address12",
                      "description": "Indicates the Start Address for video buffer 12\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA13": {
                  "address_offset": "0xDC",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 13",
                  "description": "S2MM Start Address Register 13",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address13": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address13",
                      "description": "Indicates the Start Address for video buffer 13\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA14": {
                  "address_offset": "0xE0",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 14",
                  "description": "S2MM Start Address Register 14",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address14": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address14",
                      "description": "Indicates the Start Address for video buffer 14\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA15": {
                  "address_offset": "0xE4",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 15",
                  "description": "S2MM Start Address Register 15",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address15": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address15",
                      "description": "Indicates the Start Address for video buffer 15\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                },
                "S2MM_SA16": {
                  "address_offset": "0xE8",
                  "size": 32,
                  "display_name": "S2MM Start Address Register 16",
                  "description": "S2MM Start Address Register 16",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "Start_Address16": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Start Address16",
                      "description": "Indicates the Start Address for video buffer 16\n",
                      "is_volatile": true,
                      "access": "read-write"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}